#!/bin/bash

### [ DEPENDENCIES ] ###
source lib/checks
source lib/operations
source lib/colored_logger

### [##############] ###

usage()
{
    echo
    echo "Usage:"
    echo "  gittask.sh new feature name_of_feature"
    echo "    - Creates a new branch off from 'development' named"
    echo "      'feature/name_of_feature'."
    echo "  gittask.sh new release name_of_release"
    echo "    - Creates a new branch off from 'development' named"
    echo "      'release/name_of_release'."
    echo "  gittask.sh new hotfix name_of_hotfix"
    echo "    - Creates a new branch off from 'master' named"
    echo "      'hotfix/name_of_hotfix'."
    echo "  gittask.sh done"
    echo "    - Merges current branch into master and/or development"
    echo "      depending on if it's a feature, release or hotfix."
}

# 1. Check whether the user is calling the script properly,
# if it's not the case, print the help
# Usage example:
# es1. zz hotfix-setup 76
# es2. zz hotfix-push 76
# first argument $1: script to call
# second argument $2: parameter for the selected script

# If "new", confirm that the required arguments were provided.
if [ "$1" == "new" ] && [ -n "$2" ] && [ -n "$3" ]; then

    # Validate $3, only allow a-z (lower case), 0-9 and _ (underscore) in branch names.
    [ "${3//[0-9a-z_]/}" = "" ] || { echo "Error: Branch names may only consist of a-z, 0-9 and underscore."; exit 1; }
    case $2 in
        feature )
            git checkout development
            git checkout -b "feature/$3"
            exit 0
            ;;
        release )
            git checkout development
            git checkout -b "release/$3"
            exit 0
            ;;
        hotfix )
            git checkout master
            git checkout -b "hotfix/$3"
            exit 0
            ;;
        * )
            echo "Error: You didn't specify feature, release or hotfix."
            exit 1
            ;;
    esac


